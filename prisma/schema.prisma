// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id
  name            String
  email           String    @unique
  password        String
  tanggal_lahir   DateTime?
  no_telephone    String?
  profile_picture String?
  isConfirmed     Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Admin {
  id              String    @id
  name            String
  email           String    @unique
  password        String
  tanggal_lahir   DateTime?
  no_telephone    String?
  profile_picture String?
  role            String    @default("Admin")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Session {
  user_id       String   @id
  refresh_token String
  type          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ResetPassword {
  email      String  @id
  token      String
  isPinValid Boolean @default(false)
}

model Category {
  id        String   @id
  name      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Building Building[]
}

model Building {
  id          String   @id
  id_category String
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Category Category @relation(fields: [id_category], references: [id])
}

model PriceCategory {
  id        String   @id
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Price Price[]
}

model Price {
  id               String   @id
  id_priceCategory String
  name             String
  price            Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  PriceCategory PriceCategory @relation(fields: [id_priceCategory], references: [id])
}

model UnitImage {
  id        String   @id
  id_unit   String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Unit Unit @relation(fields: [id_unit], references: [id])
}

model Unit {
  id               String @id
  id_building      String
  id_priceCategory String
  name             String
  status           String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UnitImage UnitImage[]
}
